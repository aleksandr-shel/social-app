[
  {
    "ContainingType": "backend.Controllers.AccountController",
    "Method": "VerifyGoogleToken",
    "RelativePath": "api/Account",
    "HttpMethod": "",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "externalAuth",
        "Type": "backend.DTOs.ExternalAuthDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Google.Apis.Auth.GoogleJsonWebSignature\u002BPayload",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.AccountController",
    "Method": "Current",
    "RelativePath": "api/Account/current",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AccountController",
    "Method": "Login",
    "RelativePath": "api/Account/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDto",
        "Type": "backend.DTOs.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AccountController",
    "Method": "LoginGoogle",
    "RelativePath": "api/Account/login-google",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "externalAuth",
        "Type": "backend.DTOs.ExternalAuthDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AccountController",
    "Method": "Offline",
    "RelativePath": "api/Account/offline",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AccountController",
    "Method": "RefreshToken",
    "RelativePath": "api/Account/refreshToken",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AccountController",
    "Method": "Register",
    "RelativePath": "api/Account/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerDto",
        "Type": "backend.DTOs.RegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AccountController",
    "Method": "RegisterGoogle",
    "RelativePath": "api/Account/register-google",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "externalAuth",
        "Type": "backend.DTOs.ExternalAuthDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.CommentsController",
    "Method": "CreateComment",
    "RelativePath": "api/Comments",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "commentDto",
        "Type": "backend.DTOs.Comment.CreateCommentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.CommentsController",
    "Method": "UpdateComment",
    "RelativePath": "api/Comments/{commentId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "commentId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "commentDto",
        "Type": "backend.DTOs.Comment.UpdateCommentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.CommentsController",
    "Method": "DeleteComment",
    "RelativePath": "api/Comments/{commentId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "commentId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.CommentsController",
    "Method": "GetPostComments",
    "RelativePath": "api/Comments/{postId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "postId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.EmailController",
    "Method": "TestSendEmail",
    "RelativePath": "api/Email",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "emailDto",
        "Type": "backend.Controllers.EmailDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.FavoriteController",
    "Method": "Favorites",
    "RelativePath": "api/Favorite",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.FavoriteController",
    "Method": "ToggleFavorite",
    "RelativePath": "api/Favorite/{postId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "postId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.FriendsController",
    "Method": "Friends",
    "RelativePath": "api/Friends",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.FriendsController",
    "Method": "ToggleFollow",
    "RelativePath": "api/Friends/{username}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.FriendsController",
    "Method": "Followers",
    "RelativePath": "api/Friends/{username}/followers/{n}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "n",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.FriendsController",
    "Method": "Followings",
    "RelativePath": "api/Friends/followings",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.GroupController",
    "Method": "List",
    "RelativePath": "api/Group",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.GroupController",
    "Method": "CreateGroup",
    "RelativePath": "api/Group",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Description",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Category",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Image",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "BackgroundImage",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.GroupController",
    "Method": "UpdateGroup",
    "RelativePath": "api/Group",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateGroup",
        "Type": "backend.DTOs.Group.GroupUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.GroupController",
    "Method": "DeleteGroup",
    "RelativePath": "api/Group/{groupId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.GroupController",
    "Method": "ToggleAdmin",
    "RelativePath": "api/Group/{groupId}/admin",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.GroupController",
    "Method": "Group",
    "RelativePath": "api/Group/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.GroupController",
    "Method": "ToggleFollowGroup",
    "RelativePath": "api/Group/follow/{groupId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.GroupController",
    "Method": "ListOfFollowers",
    "RelativePath": "api/Group/followers/{groupId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.GroupController",
    "Method": "ListGroupToManage",
    "RelativePath": "api/Group/manage",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.GroupController",
    "Method": "PostInGroup",
    "RelativePath": "api/Group/post/{groupId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "Content",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Images",
        "Type": "Microsoft.AspNetCore.Http.IFormFile[]",
        "IsRequired": false
      },
      {
        "Name": "Files",
        "Type": "Microsoft.AspNetCore.Http.IFormFile[]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.GroupController",
    "Method": "UpdatePostInGroup",
    "RelativePath": "api/Group/post/{groupId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "backend.DTOs.Post.PostUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.GroupController",
    "Method": "GetPosts",
    "RelativePath": "api/Group/post/{groupId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.GroupController",
    "Method": "DeletePostInGroup",
    "RelativePath": "api/Group/post/{groupId}/{postId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "postId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.GroupController",
    "Method": "Search",
    "RelativePath": "api/Group/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Q",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.MessagesController",
    "Method": "AllMesages",
    "RelativePath": "api/Messages",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.MessagesController",
    "Method": "DeleteMessage",
    "RelativePath": "api/Messages/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.MessagesController",
    "Method": "GetMessages",
    "RelativePath": "api/Messages/{roomId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roomId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.MessagesController",
    "Method": "SendMessage",
    "RelativePath": "api/Messages/{username}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "message",
        "Type": "backend.RealTime.Messages.MessagePostDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.MessagesController",
    "Method": "GetRooms",
    "RelativePath": "api/Messages/rooms",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.PostsController",
    "Method": "List",
    "RelativePath": "api/Posts",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.PostsController",
    "Method": "Create",
    "RelativePath": "api/Posts",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Content",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Images",
        "Type": "Microsoft.AspNetCore.Http.IFormFile[]",
        "IsRequired": false
      },
      {
        "Name": "Files",
        "Type": "Microsoft.AspNetCore.Http.IFormFile[]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.PostsController",
    "Method": "Get",
    "RelativePath": "api/Posts/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.PostsController",
    "Method": "Update",
    "RelativePath": "api/Posts/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "backend.DTOs.Post.PostUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.PostsController",
    "Method": "Delete",
    "RelativePath": "api/Posts/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfileController",
    "Method": "UpdateProfile",
    "RelativePath": "api/Profile",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateDto",
        "Type": "backend.DTOs.Profile.ProfileUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfileController",
    "Method": "GetProfile",
    "RelativePath": "api/Profile/{username}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfileController",
    "Method": "PostImage",
    "RelativePath": "api/Profile/Image",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Image",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "IsMain",
        "Type": "System.Boolean",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfileController",
    "Method": "SetMain",
    "RelativePath": "api/Profile/image/{key}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "key",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfileController",
    "Method": "DeleteImage",
    "RelativePath": "api/Profile/image/{key}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "key",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfileController",
    "Method": "GetProfileImages",
    "RelativePath": "api/Profile/images/{username}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfileController",
    "Method": "GetProfiles",
    "RelativePath": "api/Profile/list",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfileController",
    "Method": "Search",
    "RelativePath": "api/Profile/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Q",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.BuggyController",
    "Method": "GetBadRequest",
    "RelativePath": "bad-request",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.BuggyController",
    "Method": "GetNotFound",
    "RelativePath": "not-found",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.BuggyController",
    "Method": "GetServerError",
    "RelativePath": "server-error",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.BuggyController",
    "Method": "Test",
    "RelativePath": "test",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.BuggyController",
    "Method": "GetUnauthorised",
    "RelativePath": "unauthorised",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.WeatherForecast, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]